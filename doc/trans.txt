*trans.txt*   Translate text using translate-shell in vim.
 _                       _       _                _          _ _       _            ~
| |                     | |     | |              | |        | | |     (_)           ~
| |_ _ __ __ _ _ __  ___| | __ _| |_ ___ ____ ___| |__   ___| | |_   ___ _ __ ___   ~
| __| '__/ _` | '_ \/ __| |/ _` | __/ _ \____/ __| '_ \ / _ \ | \ \ / / | '_ ` _ \  ~
| |_| | | (_| | | | \__ \ | (_| | ||  __/    \__ \ | | |  __/ | |\ V /| | | | | | | ~
 \__|_|  \__,_|_| |_|___/_|\__,_|\__\___|    |___/_| |_|\___|_|_(_)_/ |_|_| |_| |_| ~


Author:         Egor Churaev <egor.churaev@gmail.com>
Licence:        GPLv3
Homepage:       https://github.com/echuraev/translate-shell.vim
Version:        1.0

==============================================================================
CONTENTS                               *trans* *translate-shell.vim* *trans-context*

        1. Intro ............................ |trans-intro|
           Features ......................... |trans-features|
        2. Requirements ..................... |trans-requirements|
        3. Installation ..................... |trans-installation|
        4. Usage ............................ |trans-usage|
            Commands ........................ |trans-commands|
            Key mappings .................... |trans-keys|
        5. Configuration .................... |trans-configuration|
        6. Changelog ........................ |trans-changelog|
        7. Todo ............................. |trans-todo|

==============================================================================
INTRO                                                              *trans-intro*

Translate-shell.vim is a plugin for translating text without leaving Vim. It
provides a window that displays the translate of word under cursor, selected
text or you can use "on fly" translation and translate inserted text. More
information you can find in |trans-commands|.

------------------------------------------------------------------------------
FEATURES                                                        *trans-features*

The following features are supported by translate-shell.vim:
    - Translate word under cursor.
    - Translate multi line string.
    - Select direction of translate from predefined list.
    - Interactive translation.
    - Open interactive terminal with translate-shell (only Vim 8).

==============================================================================
REQUIREMENTS                                                *trans-requirements*

The following requirements have to be met in order to be able to use
translate-shell.vim:
    - Install translate-shell. Translate-shell is used as a backend for the
    plugin. You can find it on github:

        https://github.com/soimort/translate-shell

    Installation process is described in |trans-installation|.

==============================================================================
INSTALLATION                                                *trans-installation*

You can install translate-shell.vim by using any vim plugin manager.

Installation with vim-plug:~

If you doesn't have installed translate-shell in path, you can install plugin
by the following command: >

    Plug 'echuraev/translate-shell.vim', { 'do': 'wget -O ~/.vim/trans git.io/trans && chmod +x ~/.vim/trans' }

And after it you should specify path to translate-shell by defining
|g:trans_bin| variable e.g: >

    let g:trans_bin = "~/.vim"

If you already have installed translate-shell in your PATH then it is enough
to install plugin by the following command: >

    Plug 'echuraev/translate-shell.vim'

==============================================================================
USAGE                                                              *trans-usage*

There are several different ways to use |translate-shell.vim|:

1. Translate word under cursor (with default parameters):~

   Run command |:Trans| and word under cursor will be translated. Target
   language determines by using variable |g:trans_default_direction|.

   Exercise (translate word): `Hello`

2. Translate visual selection (with default parameters):~

   Run command |:TransVisual| and word under cursor will be translated. Target
   language determines by using variable |g:trans_default_direction|.

   Exercise (translate sentence): `Hello github world!`

3. Translate word under cursor (with parameters from command line):~

   You can pass any arguments to command |:Trans|. Try to translate word on
   German in brief mode by command: `:Trans -brief` `:de`.

   Exercise (translate word): `Hello`

4. Translate visual selection (with parameters from command line):~

   You can pass any arguments to command |:TransVisual|. Try to translate word
   on German in brief mode by command: `:TransVisual -brief` `:de`.

   Exercise (translate sentence): `Hello github world!`

5. Translate word with choosing direction:~

   You can translate word and choose target translation from predefined list
   |g:trans_directions_list|. Just run command |:TransSelectDirection|.

   Exercise (translate word): `Hello`

6. Translate visual selection with choosing direction:~

   You can translate visual selection and choose target translation from
   predefined list |g:trans_directions_list|. Just run command
   |:TransVisualSelectDirection|.

   Exercise (translate sentence): `Hello github world!`

7. Interactive translation (translate user input):~

   You can translate anything that you wish "on fly" by using command
   |:TransInteractive|. Target language determines by using variable
   |g:trans_default_direction|.

   Exercise: Translate something with `:TransInteractive`

8. Interactive translation (translate user input):~

   You can translate anything that you wish "on fly" by using command
   |:TransInteractive|. Try to pass options from command line.

   Exercise: Translate something with `:TransInteractive -brief :de`

9. Translate terminal (works only in Vim 8):~

   You can open terminal with translate-shell and work in it by command
   |:TransTerm|. Target language determines by using variable
   |g:trans_default_direction|.

   Exercise: Translate something with `:TransTerm`

10. Translate terminal with parameters from command line (works only in Vim 8):~

   You can open terminal with translate-shell and work in it by command
   |:TransTerm|. Try to pass options from command line.

   Exercise: Translate something with `:TransTerm -brief :de`

------------------------------------------------------------------------------
COMMANDS                                                        *trans-commands*

:Trans [{options}]                                                      *:Trans*
    Translate word under cursor.

    - If you call it without any parameters it will run with default
      parameters from variable |g:trans_default_direction|.
    - If you pass options then variable |g:trans_default_direction| will be
      ignored. For more details see section |trans-usage|.

:TransVisual [{options}]                                          *:TransVisual*
    Translate text in visual selection.

    - If you call it without any parameters it will run with default
      parameters from variable |g:trans_default_direction|.
    - If you pass options then variable |g:trans_default_direction| will be
      ignored. For more details see section |trans-usage|.

:TransSelectDirection                                    *:TransSelectDirection*
    Gives a choice of translate direction and translate word under cursor.
    Translate directions are determined in predefined list
    |g:trans_directions_list|. For more details see section |trans-usage|.

:TransVisualSelectDirection                        *:TransVisualSelectDirection*
    Gives a choice of translate direction and translate text in visual
    selection.  Translate directions are determined in predefined list
    |g:trans_directions_list|. For more details see section |trans-usage|.

:TransInteractive [{options}]                                *:TransInteractive*
    Gives a choice of translate direction and translate text of user.

    - If you call it without any parameters it will run with default
      parameters from variable |g:trans_default_direction| or will give a
      choice if list |g:trans_directions_list| is specified.
    - If you pass options then variable |g:trans_default_direction| will be
      ignored. For more details see section |trans-usage|.

:TransTerm [{options}]                                              *:TransTerm*
    Open terminal with interactive translate-shell. That works only on VIM 8.

    - If you call it without any parameters it will run with default
      parameters from variable |g:trans_default_direction|.
    - If you pass options then variable |g:trans_default_direction| will be
      ignored. For more details see section |trans-usage|.

------------------------------------------------------------------------------
KEY MAPPING                                                         *trans-keys*

By default plugin doesn't provide any mapped keys. But you can create your own
key mapping for fast translation.

Example of key mapping: >

    inoremap <silent> <leader>t <ESC>:Trans<CR>
    nnoremap <silent> <leader>t :Trans<CR>
    vnoremap <silent> <leader>t :TransVisual<CR>

You can map all other commands in this way.

==============================================================================
CONFIGURATION                                              *trans-configuration*

                                                                  *g:trans_bin*
g:trans_bin~
Default: empty

Use this option to specify the location of your translate-shell executable.
Only needed if it is not in one of the directories in your $PATH environment
variable.

Example:
>
    let g:trans_bin = "~/.vim"
<
                                                    *g:trans_default_direction*
g:trans_default_direction~
Default: empty

Use this option to specify default direction of translate. If variable is
empty then the source text translates into the language of your `locale`.

Example:
>
    let g:trans_default_direction = ":ru"
<
    or to specify two target languages:
>
    let g:trans_default_direction = ":ru+de"
<
                                                      *g:trans_directions_list*
g:trans_directions_list~
Default: empty list

Use this option to specify the list of your translate directions. This list is
used in the following commands:
    |:TransSelectDirection|, |:TransVisualSelectDirection|, |:TransInteractive|.

This list contains lists of direction. First member of the list is source text
language, second and other are the target translation languages. If member is
empty (`''`) then language will be automatically determined.

Example:
>
    let g:trans_directions_list = [
        \['en', 'ru'],
        \['ru', 'en'],
        \['en', 'de'],
        \['en', 'ru', 'de'],
        \['', 'ru'],
        \['', ''],
    \]
<
    For this list you get the following choose:
>
    Select languages:
    1. [English -> Russian]
    2. [Russian -> English]
    3. [English -> German]
    4. [English -> Russian, German]
    5. [Autodetect -> Russian]
    6. [Autodetect -> Autodetect]
<
                                                     *g:trans_advanced_options*
g:trans_advanced_options~
Default: empty

Use this option to specify additional options for translate-shell.

Example:
>
    let g:trans_advanced_options = "-brief"
<
                                                            *g:trans_win_width*
g:trans_win_width~
Default: 50

Width of the translate windows in characters.

Example:
>
    let g:trans_win_width = 40
<
                                                           *g:trans_win_height*
g:trans_win_height~
Default: 15

Height of the translate windows in characters.

Example:
>
    let g:trans_win_height = 30
<
                                                         *g:trans_win_position*
g:trans_win_position~
Default: 'bottom'

This variable determines position of translate window.

Possible values are:
    'bottom': Windows is in the bottom of the screen.
    'up': Windows is in the up of the screen.
    'left': Windows is in the left side of the screen.
    'right': Windows is in the right side of the screen.

Example:
>
    let g:trans_win_position = "right"
<
==============================================================================
CHANGELOG                                                      *trans-changelog*

1.0 (2018-05-)
    - Initial release

==============================================================================
TODO                                                                *trans-todo*

    - Keep translate story
        - Choose the better translate to save
    - Nice syntax highlighting
    - Folding for translation
    - Update readme
    - Possibility to join lines for better translate
    - Refactor and join translate functions (visual and not)

==============================================================================
 vim: tw=78 ts=8 sw=4 sts=4 et ft=help
